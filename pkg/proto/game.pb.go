// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: game.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameState_Phase int32

const (
	GameState_Unknown   GameState_Phase = 0
	GameState_Preparing GameState_Phase = 1
	GameState_Playing   GameState_Phase = 2
	GameState_Completed GameState_Phase = 3
	GameState_Aborted   GameState_Phase = 4
)

// Enum value maps for GameState_Phase.
var (
	GameState_Phase_name = map[int32]string{
		0: "Unknown",
		1: "Preparing",
		2: "Playing",
		3: "Completed",
		4: "Aborted",
	}
	GameState_Phase_value = map[string]int32{
		"Unknown":   0,
		"Preparing": 1,
		"Playing":   2,
		"Completed": 3,
		"Aborted":   4,
	}
)

func (x GameState_Phase) Enum() *GameState_Phase {
	p := new(GameState_Phase)
	*p = x
	return p
}

func (x GameState_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameState_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[0].Descriptor()
}

func (GameState_Phase) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[0]
}

func (x GameState_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameState_Phase.Descriptor instead.
func (GameState_Phase) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{13, 0}
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The is for the created session.
	// Use this id for all other requests for this session.
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type CreateGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{2}
}

type CreateGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *CreateGameResponse) Reset() {
	*x = CreateGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameResponse) ProtoMessage() {}

func (x *CreateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameResponse.ProtoReflect.Descriptor instead.
func (*CreateGameResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{3}
}

func (x *CreateGameResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type JoinGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	GameId    string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *JoinGameRequest) Reset() {
	*x = JoinGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameRequest) ProtoMessage() {}

func (x *JoinGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameRequest.ProtoReflect.Descriptor instead.
func (*JoinGameRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{4}
}

func (x *JoinGameRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *JoinGameRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type ListGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Any of these phases. If no phase is listed, any phase is okay.
	Phase []GameState_Phase `protobuf:"varint,1,rep,packed,name=phase,proto3,enum=cards.proto.GameState_Phase" json:"phase,omitempty"`
}

func (x *ListGamesRequest) Reset() {
	*x = ListGamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesRequest) ProtoMessage() {}

func (x *ListGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesRequest.ProtoReflect.Descriptor instead.
func (*ListGamesRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{5}
}

func (x *ListGamesRequest) GetPhase() []GameState_Phase {
	if x != nil {
		return x.Phase
	}
	return nil
}

type ListGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*ListGamesResponse_GameSummary `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *ListGamesResponse) Reset() {
	*x = ListGamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesResponse) ProtoMessage() {}

func (x *ListGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesResponse.ProtoReflect.Descriptor instead.
func (*ListGamesResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{6}
}

func (x *ListGamesResponse) GetGames() []*ListGamesResponse_GameSummary {
	if x != nil {
		return x.Games
	}
	return nil
}

type ObserveGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	GameId    string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *ObserveGameRequest) Reset() {
	*x = ObserveGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObserveGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveGameRequest) ProtoMessage() {}

func (x *ObserveGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveGameRequest.ProtoReflect.Descriptor instead.
func (*ObserveGameRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{7}
}

func (x *ObserveGameRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ObserveGameRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GameActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	GameId    string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	// Types that are assignable to Type:
	//	*GameActionRequest_ReadyToStartGame
	//	*GameActionRequest_LeaveGame
	//	*GameActionRequest_PlayCard
	Type isGameActionRequest_Type `protobuf_oneof:"type"`
}

func (x *GameActionRequest) Reset() {
	*x = GameActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionRequest) ProtoMessage() {}

func (x *GameActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionRequest.ProtoReflect.Descriptor instead.
func (*GameActionRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{8}
}

func (x *GameActionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GameActionRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (m *GameActionRequest) GetType() isGameActionRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *GameActionRequest) GetReadyToStartGame() *ReadyToStartGameAction {
	if x, ok := x.GetType().(*GameActionRequest_ReadyToStartGame); ok {
		return x.ReadyToStartGame
	}
	return nil
}

func (x *GameActionRequest) GetLeaveGame() *LeaveGameAction {
	if x, ok := x.GetType().(*GameActionRequest_LeaveGame); ok {
		return x.LeaveGame
	}
	return nil
}

func (x *GameActionRequest) GetPlayCard() *PlayCardAction {
	if x, ok := x.GetType().(*GameActionRequest_PlayCard); ok {
		return x.PlayCard
	}
	return nil
}

type isGameActionRequest_Type interface {
	isGameActionRequest_Type()
}

type GameActionRequest_ReadyToStartGame struct {
	ReadyToStartGame *ReadyToStartGameAction `protobuf:"bytes,3,opt,name=ready_to_start_game,json=readyToStartGame,proto3,oneof"`
}

type GameActionRequest_LeaveGame struct {
	LeaveGame *LeaveGameAction `protobuf:"bytes,4,opt,name=leave_game,json=leaveGame,proto3,oneof"`
}

type GameActionRequest_PlayCard struct {
	PlayCard *PlayCardAction `protobuf:"bytes,5,opt,name=play_card,json=playCard,proto3,oneof"`
}

func (*GameActionRequest_ReadyToStartGame) isGameActionRequest_Type() {}

func (*GameActionRequest_LeaveGame) isGameActionRequest_Type() {}

func (*GameActionRequest_PlayCard) isGameActionRequest_Type() {}

type ReadyToStartGameAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadyToStartGameAction) Reset() {
	*x = ReadyToStartGameAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToStartGameAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToStartGameAction) ProtoMessage() {}

func (x *ReadyToStartGameAction) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToStartGameAction.ProtoReflect.Descriptor instead.
func (*ReadyToStartGameAction) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{9}
}

type LeaveGameAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveGameAction) Reset() {
	*x = LeaveGameAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGameAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGameAction) ProtoMessage() {}

func (x *LeaveGameAction) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGameAction.ProtoReflect.Descriptor instead.
func (*LeaveGameAction) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{10}
}

type PlayCardAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card string `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *PlayCardAction) Reset() {
	*x = PlayCardAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayCardAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayCardAction) ProtoMessage() {}

func (x *PlayCardAction) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayCardAction.ProtoReflect.Descriptor instead.
func (*PlayCardAction) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{11}
}

func (x *PlayCardAction) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

type GameStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If session_id is present, returned game state will hide other players' cards.
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	GameId    string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GameStateRequest) Reset() {
	*x = GameStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStateRequest) ProtoMessage() {}

func (x *GameStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStateRequest.ProtoReflect.Descriptor instead.
func (*GameStateRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{12}
}

func (x *GameStateRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GameStateRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Phase        GameState_Phase     `protobuf:"varint,2,opt,name=phase,proto3,enum=cards.proto.GameState_Phase" json:"phase,omitempty"`
	Players      []*GameState_Player `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	CurrentTrick *GameState_Cards    `protobuf:"bytes,4,opt,name=current_trick,json=currentTrick,proto3" json:"current_trick,omitempty"`
	LegalPlays   *GameState_Cards    `protobuf:"bytes,5,opt,name=legal_plays,json=legalPlays,proto3" json:"legal_plays,omitempty"`
}

func (x *GameState) Reset() {
	*x = GameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{13}
}

func (x *GameState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameState) GetPhase() GameState_Phase {
	if x != nil {
		return x.Phase
	}
	return GameState_Unknown
}

func (x *GameState) GetPlayers() []*GameState_Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameState) GetCurrentTrick() *GameState_Cards {
	if x != nil {
		return x.CurrentTrick
	}
	return nil
}

func (x *GameState) GetLegalPlays() *GameState_Cards {
	if x != nil {
		return x.LegalPlays
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`  // 0 == ok
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"` // if code != 0
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{14}
}

func (x *Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Status) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GameActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	// Types that are assignable to Type:
	//	*GameActivity_PlayerJoined_
	//	*GameActivity_PlayerLeft_
	//	*GameActivity_GameReadyToStart_
	//	*GameActivity_GameStarted_
	//	*GameActivity_CardPlayed_
	//	*GameActivity_TrickCompleted_
	//	*GameActivity_YourTurn_
	//	*GameActivity_GameFinished_
	//	*GameActivity_GameAborted_
	//	*GameActivity_BroadcastMsg
	Type isGameActivity_Type `protobuf_oneof:"type"`
}

func (x *GameActivity) Reset() {
	*x = GameActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActivity) ProtoMessage() {}

func (x *GameActivity) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActivity.ProtoReflect.Descriptor instead.
func (*GameActivity) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15}
}

func (x *GameActivity) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (m *GameActivity) GetType() isGameActivity_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *GameActivity) GetPlayerJoined() *GameActivity_PlayerJoined {
	if x, ok := x.GetType().(*GameActivity_PlayerJoined_); ok {
		return x.PlayerJoined
	}
	return nil
}

func (x *GameActivity) GetPlayerLeft() *GameActivity_PlayerLeft {
	if x, ok := x.GetType().(*GameActivity_PlayerLeft_); ok {
		return x.PlayerLeft
	}
	return nil
}

func (x *GameActivity) GetGameReadyToStart() *GameActivity_GameReadyToStart {
	if x, ok := x.GetType().(*GameActivity_GameReadyToStart_); ok {
		return x.GameReadyToStart
	}
	return nil
}

func (x *GameActivity) GetGameStarted() *GameActivity_GameStarted {
	if x, ok := x.GetType().(*GameActivity_GameStarted_); ok {
		return x.GameStarted
	}
	return nil
}

func (x *GameActivity) GetCardPlayed() *GameActivity_CardPlayed {
	if x, ok := x.GetType().(*GameActivity_CardPlayed_); ok {
		return x.CardPlayed
	}
	return nil
}

func (x *GameActivity) GetTrickCompleted() *GameActivity_TrickCompleted {
	if x, ok := x.GetType().(*GameActivity_TrickCompleted_); ok {
		return x.TrickCompleted
	}
	return nil
}

func (x *GameActivity) GetYourTurn() *GameActivity_YourTurn {
	if x, ok := x.GetType().(*GameActivity_YourTurn_); ok {
		return x.YourTurn
	}
	return nil
}

func (x *GameActivity) GetGameFinished() *GameActivity_GameFinished {
	if x, ok := x.GetType().(*GameActivity_GameFinished_); ok {
		return x.GameFinished
	}
	return nil
}

func (x *GameActivity) GetGameAborted() *GameActivity_GameAborted {
	if x, ok := x.GetType().(*GameActivity_GameAborted_); ok {
		return x.GameAborted
	}
	return nil
}

func (x *GameActivity) GetBroadcastMsg() string {
	if x, ok := x.GetType().(*GameActivity_BroadcastMsg); ok {
		return x.BroadcastMsg
	}
	return ""
}

type isGameActivity_Type interface {
	isGameActivity_Type()
}

type GameActivity_PlayerJoined_ struct {
	PlayerJoined *GameActivity_PlayerJoined `protobuf:"bytes,10,opt,name=player_joined,json=playerJoined,proto3,oneof"`
}

type GameActivity_PlayerLeft_ struct {
	PlayerLeft *GameActivity_PlayerLeft `protobuf:"bytes,11,opt,name=player_left,json=playerLeft,proto3,oneof"`
}

type GameActivity_GameReadyToStart_ struct {
	GameReadyToStart *GameActivity_GameReadyToStart `protobuf:"bytes,12,opt,name=game_ready_to_start,json=gameReadyToStart,proto3,oneof"`
}

type GameActivity_GameStarted_ struct {
	GameStarted *GameActivity_GameStarted `protobuf:"bytes,13,opt,name=game_started,json=gameStarted,proto3,oneof"`
}

type GameActivity_CardPlayed_ struct {
	CardPlayed *GameActivity_CardPlayed `protobuf:"bytes,14,opt,name=card_played,json=cardPlayed,proto3,oneof"`
}

type GameActivity_TrickCompleted_ struct {
	TrickCompleted *GameActivity_TrickCompleted `protobuf:"bytes,15,opt,name=trick_completed,json=trickCompleted,proto3,oneof"`
}

type GameActivity_YourTurn_ struct {
	YourTurn *GameActivity_YourTurn `protobuf:"bytes,16,opt,name=your_turn,json=yourTurn,proto3,oneof"` // for player listener
}

type GameActivity_GameFinished_ struct {
	GameFinished *GameActivity_GameFinished `protobuf:"bytes,17,opt,name=game_finished,json=gameFinished,proto3,oneof"`
}

type GameActivity_GameAborted_ struct {
	GameAborted *GameActivity_GameAborted `protobuf:"bytes,18,opt,name=game_aborted,json=gameAborted,proto3,oneof"`
}

type GameActivity_BroadcastMsg struct {
	BroadcastMsg string `protobuf:"bytes,19,opt,name=broadcast_msg,json=broadcastMsg,proto3,oneof"`
}

func (*GameActivity_PlayerJoined_) isGameActivity_Type() {}

func (*GameActivity_PlayerLeft_) isGameActivity_Type() {}

func (*GameActivity_GameReadyToStart_) isGameActivity_Type() {}

func (*GameActivity_GameStarted_) isGameActivity_Type() {}

func (*GameActivity_CardPlayed_) isGameActivity_Type() {}

func (*GameActivity_TrickCompleted_) isGameActivity_Type() {}

func (*GameActivity_YourTurn_) isGameActivity_Type() {}

func (*GameActivity_GameFinished_) isGameActivity_Type() {}

func (*GameActivity_GameAborted_) isGameActivity_Type() {}

func (*GameActivity_BroadcastMsg) isGameActivity_Type() {}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{16}
}

func (x *PingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{17}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RegistryActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*RegistryActivity_SessionCreated_
	//	*RegistryActivity_GameCreated_
	//	*RegistryActivity_GameDeleted_
	//	*RegistryActivity_FullGamesList_
	Type isRegistryActivity_Type `protobuf_oneof:"type"`
}

func (x *RegistryActivity) Reset() {
	*x = RegistryActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryActivity) ProtoMessage() {}

func (x *RegistryActivity) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryActivity.ProtoReflect.Descriptor instead.
func (*RegistryActivity) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{18}
}

func (m *RegistryActivity) GetType() isRegistryActivity_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *RegistryActivity) GetSessionCreated() *RegistryActivity_SessionCreated {
	if x, ok := x.GetType().(*RegistryActivity_SessionCreated_); ok {
		return x.SessionCreated
	}
	return nil
}

func (x *RegistryActivity) GetGameCreated() *RegistryActivity_GameCreated {
	if x, ok := x.GetType().(*RegistryActivity_GameCreated_); ok {
		return x.GameCreated
	}
	return nil
}

func (x *RegistryActivity) GetGameDeleted() *RegistryActivity_GameDeleted {
	if x, ok := x.GetType().(*RegistryActivity_GameDeleted_); ok {
		return x.GameDeleted
	}
	return nil
}

func (x *RegistryActivity) GetFullGamesList() *RegistryActivity_FullGamesList {
	if x, ok := x.GetType().(*RegistryActivity_FullGamesList_); ok {
		return x.FullGamesList
	}
	return nil
}

type isRegistryActivity_Type interface {
	isRegistryActivity_Type()
}

type RegistryActivity_SessionCreated_ struct {
	SessionCreated *RegistryActivity_SessionCreated `protobuf:"bytes,1,opt,name=session_created,json=sessionCreated,proto3,oneof"`
}

type RegistryActivity_GameCreated_ struct {
	GameCreated *RegistryActivity_GameCreated `protobuf:"bytes,2,opt,name=game_created,json=gameCreated,proto3,oneof"`
}

type RegistryActivity_GameDeleted_ struct {
	GameDeleted *RegistryActivity_GameDeleted `protobuf:"bytes,3,opt,name=game_deleted,json=gameDeleted,proto3,oneof"`
}

type RegistryActivity_FullGamesList_ struct {
	FullGamesList *RegistryActivity_FullGamesList `protobuf:"bytes,4,opt,name=full_games_list,json=fullGamesList,proto3,oneof"`
}

func (*RegistryActivity_SessionCreated_) isRegistryActivity_Type() {}

func (*RegistryActivity_GameCreated_) isRegistryActivity_Type() {}

func (*RegistryActivity_GameDeleted_) isRegistryActivity_Type() {}

func (*RegistryActivity_FullGamesList_) isRegistryActivity_Type() {}

type ListGamesResponse_GameSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Phase       GameState_Phase `protobuf:"varint,2,opt,name=phase,proto3,enum=cards.proto.GameState_Phase" json:"phase,omitempty"`
	PlayerNames []string        `protobuf:"bytes,3,rep,name=player_names,json=playerNames,proto3" json:"player_names,omitempty"`
}

func (x *ListGamesResponse_GameSummary) Reset() {
	*x = ListGamesResponse_GameSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGamesResponse_GameSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesResponse_GameSummary) ProtoMessage() {}

func (x *ListGamesResponse_GameSummary) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesResponse_GameSummary.ProtoReflect.Descriptor instead.
func (*ListGamesResponse_GameSummary) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ListGamesResponse_GameSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListGamesResponse_GameSummary) GetPhase() GameState_Phase {
	if x != nil {
		return x.Phase
	}
	return GameState_Unknown
}

func (x *ListGamesResponse_GameSummary) GetPlayerNames() []string {
	if x != nil {
		return x.PlayerNames
	}
	return nil
}

type GameState_Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cards        *GameState_Cards   `protobuf:"bytes,3,opt,name=cards,proto3" json:"cards,omitempty"` // not populated for other players
	NumCards     int32              `protobuf:"varint,4,opt,name=num_cards,json=numCards,proto3" json:"num_cards,omitempty"`
	Tricks       []*GameState_Cards `protobuf:"bytes,5,rep,name=tricks,proto3" json:"tricks,omitempty"`
	NumTricks    int32              `protobuf:"varint,6,opt,name=num_tricks,json=numTricks,proto3" json:"num_tricks,omitempty"`
	TrickScore   int32              `protobuf:"varint,7,opt,name=trick_score,json=trickScore,proto3" json:"trick_score,omitempty"` // sum of scores of all taken tricks
	IsNextPlayer bool               `protobuf:"varint,8,opt,name=is_next_player,json=isNextPlayer,proto3" json:"is_next_player,omitempty"`
	HandScore    int32              `protobuf:"varint,9,opt,name=hand_score,json=handScore,proto3" json:"hand_score,omitempty"` // after game is Completed, score for this hand (may be different than trick_score).
}

func (x *GameState_Player) Reset() {
	*x = GameState_Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState_Player) ProtoMessage() {}

func (x *GameState_Player) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState_Player.ProtoReflect.Descriptor instead.
func (*GameState_Player) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GameState_Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameState_Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameState_Player) GetCards() *GameState_Cards {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *GameState_Player) GetNumCards() int32 {
	if x != nil {
		return x.NumCards
	}
	return 0
}

func (x *GameState_Player) GetTricks() []*GameState_Cards {
	if x != nil {
		return x.Tricks
	}
	return nil
}

func (x *GameState_Player) GetNumTricks() int32 {
	if x != nil {
		return x.NumTricks
	}
	return 0
}

func (x *GameState_Player) GetTrickScore() int32 {
	if x != nil {
		return x.TrickScore
	}
	return 0
}

func (x *GameState_Player) GetIsNextPlayer() bool {
	if x != nil {
		return x.IsNextPlayer
	}
	return false
}

func (x *GameState_Player) GetHandScore() int32 {
	if x != nil {
		return x.HandScore
	}
	return 0
}

type GameState_Cards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []string `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *GameState_Cards) Reset() {
	*x = GameState_Cards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState_Cards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState_Cards) ProtoMessage() {}

func (x *GameState_Cards) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState_Cards.ProtoReflect.Descriptor instead.
func (*GameState_Cards) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{13, 1}
}

func (x *GameState_Cards) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

type GameActivity_PlayerJoined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GameActivity_PlayerJoined) Reset() {
	*x = GameActivity_PlayerJoined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActivity_PlayerJoined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActivity_PlayerJoined) ProtoMessage() {}

func (x *GameActivity_PlayerJoined) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActivity_PlayerJoined.ProtoReflect.Descriptor instead.
func (*GameActivity_PlayerJoined) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GameActivity_PlayerJoined) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GameActivity_PlayerLeft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GameActivity_PlayerLeft) Reset() {
	*x = GameActivity_PlayerLeft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActivity_PlayerLeft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActivity_PlayerLeft) ProtoMessage() {}

func (x *GameActivity_PlayerLeft) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActivity_PlayerLeft.ProtoReflect.Descriptor instead.
func (*GameActivity_PlayerLeft) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15, 1}
}

func (x *GameActivity_PlayerLeft) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GameActivity_GameReadyToStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameActivity_GameReadyToStart) Reset() {
	*x = GameActivity_GameReadyToStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActivity_GameReadyToStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActivity_GameReadyToStart) ProtoMessage() {}

func (x *GameActivity_GameReadyToStart) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActivity_GameReadyToStart.ProtoReflect.Descriptor instead.
func (*GameActivity_GameReadyToStart) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15, 2}
}

type GameActivity_GameStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameActivity_GameStarted) Reset() {
	*x = GameActivity_GameStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActivity_GameStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActivity_GameStarted) ProtoMessage() {}

func (x *GameActivity_GameStarted) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActivity_GameStarted.ProtoReflect.Descriptor instead.
func (*GameActivity_GameStarted) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15, 3}
}

type GameActivity_CardPlayed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameActivity_CardPlayed) Reset() {
	*x = GameActivity_CardPlayed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActivity_CardPlayed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActivity_CardPlayed) ProtoMessage() {}

func (x *GameActivity_CardPlayed) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActivity_CardPlayed.ProtoReflect.Descriptor instead.
func (*GameActivity_CardPlayed) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15, 4}
}

type GameActivity_TrickCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trick       []string `protobuf:"bytes,1,rep,name=trick,proto3" json:"trick,omitempty"`
	WinningCard string   `protobuf:"bytes,2,opt,name=winning_card,json=winningCard,proto3" json:"winning_card,omitempty"`
	WinnerId    string   `protobuf:"bytes,3,opt,name=winner_id,json=winnerId,proto3" json:"winner_id,omitempty"`
	WinnerName  string   `protobuf:"bytes,4,opt,name=winner_name,json=winnerName,proto3" json:"winner_name,omitempty"`
}

func (x *GameActivity_TrickCompleted) Reset() {
	*x = GameActivity_TrickCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActivity_TrickCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActivity_TrickCompleted) ProtoMessage() {}

func (x *GameActivity_TrickCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActivity_TrickCompleted.ProtoReflect.Descriptor instead.
func (*GameActivity_TrickCompleted) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15, 5}
}

func (x *GameActivity_TrickCompleted) GetTrick() []string {
	if x != nil {
		return x.Trick
	}
	return nil
}

func (x *GameActivity_TrickCompleted) GetWinningCard() string {
	if x != nil {
		return x.WinningCard
	}
	return ""
}

func (x *GameActivity_TrickCompleted) GetWinnerId() string {
	if x != nil {
		return x.WinnerId
	}
	return ""
}

func (x *GameActivity_TrickCompleted) GetWinnerName() string {
	if x != nil {
		return x.WinnerName
	}
	return ""
}

type GameActivity_YourTurn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameActivity_YourTurn) Reset() {
	*x = GameActivity_YourTurn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActivity_YourTurn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActivity_YourTurn) ProtoMessage() {}

func (x *GameActivity_YourTurn) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActivity_YourTurn.ProtoReflect.Descriptor instead.
func (*GameActivity_YourTurn) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15, 6}
}

type GameActivity_GameFinished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameActivity_GameFinished) Reset() {
	*x = GameActivity_GameFinished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActivity_GameFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActivity_GameFinished) ProtoMessage() {}

func (x *GameActivity_GameFinished) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActivity_GameFinished.ProtoReflect.Descriptor instead.
func (*GameActivity_GameFinished) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15, 7}
}

type GameActivity_GameAborted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameActivity_GameAborted) Reset() {
	*x = GameActivity_GameAborted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameActivity_GameAborted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActivity_GameAborted) ProtoMessage() {}

func (x *GameActivity_GameAborted) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActivity_GameAborted.ProtoReflect.Descriptor instead.
func (*GameActivity_GameAborted) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15, 8}
}

type RegistryActivity_SessionCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *RegistryActivity_SessionCreated) Reset() {
	*x = RegistryActivity_SessionCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryActivity_SessionCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryActivity_SessionCreated) ProtoMessage() {}

func (x *RegistryActivity_SessionCreated) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryActivity_SessionCreated.ProtoReflect.Descriptor instead.
func (*RegistryActivity_SessionCreated) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{18, 0}
}

func (x *RegistryActivity_SessionCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type RegistryActivity_GameCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *RegistryActivity_GameCreated) Reset() {
	*x = RegistryActivity_GameCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryActivity_GameCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryActivity_GameCreated) ProtoMessage() {}

func (x *RegistryActivity_GameCreated) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryActivity_GameCreated.ProtoReflect.Descriptor instead.
func (*RegistryActivity_GameCreated) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{18, 1}
}

func (x *RegistryActivity_GameCreated) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type RegistryActivity_GameDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *RegistryActivity_GameDeleted) Reset() {
	*x = RegistryActivity_GameDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryActivity_GameDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryActivity_GameDeleted) ProtoMessage() {}

func (x *RegistryActivity_GameDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryActivity_GameDeleted.ProtoReflect.Descriptor instead.
func (*RegistryActivity_GameDeleted) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{18, 2}
}

func (x *RegistryActivity_GameDeleted) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type RegistryActivity_FullGamesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameIds []string `protobuf:"bytes,1,rep,name=game_ids,json=gameIds,proto3" json:"game_ids,omitempty"`
}

func (x *RegistryActivity_FullGamesList) Reset() {
	*x = RegistryActivity_FullGamesList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryActivity_FullGamesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryActivity_FullGamesList) ProtoMessage() {}

func (x *RegistryActivity_FullGamesList) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryActivity_FullGamesList.ProtoReflect.Descriptor instead.
func (*RegistryActivity_FullGamesList) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{18, 3}
}

func (x *RegistryActivity_FullGamesList) GetGameIds() []string {
	if x != nil {
		return x.GameIds
	}
	return nil
}

var File_game_proto protoreflect.FileDescriptor

var file_game_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x0f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x31, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x22, 0x46, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x05, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x1a, 0x74, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x12, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xa4, 0x02, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x13, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x74, 0x6f,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x61, 0x64, 0x79, 0x54,
	0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x6c, 0x65,
	0x61, 0x76, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09,
	0x6c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x43,
	0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x18, 0x0a,
	0x16, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x0e, 0x50, 0x6c,
	0x61, 0x79, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64,
	0x22, 0x4a, 0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xb2, 0x05, 0x0a,
	0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x68,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x63, 0x6b, 0x12, 0x3d, 0x0a, 0x0b, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x0a, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x73, 0x1a, 0xb8, 0x02, 0x0a, 0x06, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6e, 0x75, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x74, 0x72, 0x69,
	0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x06, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x54, 0x72, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x1a, 0x1d, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x4c, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79,
	0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x10,
	0x04, 0x22, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xbf, 0x08, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x4d, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x47,
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x5b, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x48, 0x00, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x47, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x63,
	0x61, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x0f, 0x74, 0x72, 0x69,
	0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x54, 0x72,
	0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e,
	0x74, 0x72, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x41,
	0x0a, 0x09, 0x79, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x59, 0x6f, 0x75,
	0x72, 0x54, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x79, 0x6f, 0x75, 0x72, 0x54, 0x75, 0x72,
	0x6e, 0x12, 0x4d, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x12, 0x4a, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x0b, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0d,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x4d, 0x73, 0x67, 0x1a, 0x22, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x20, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x12, 0x0a, 0x10, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x1a, 0x0d, 0x0a,
	0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x1a, 0x0c, 0x0a, 0x0a,
	0x43, 0x61, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x1a, 0x87, 0x01, 0x0a, 0x0e, 0x54,
	0x72, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72,
	0x69, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x69, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x0a, 0x0a, 0x08, 0x59, 0x6f, 0x75, 0x72, 0x54, 0x75, 0x72, 0x6e,
	0x1a, 0x0e, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x1a, 0x0d, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42,
	0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x28, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x97, 0x04, 0x0a, 0x10, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x57, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x61, 0x6d,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x61, 0x6d,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x0f, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0d, 0x66, 0x75, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x1a,
	0x2f, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x1a, 0x26, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x1a, 0x26, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x1a, 0x2a, 0x0a, 0x0d, 0x46, 0x75, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x73, 0x42, 0x06, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x32, 0xd2, 0x04, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x30, 0x01,
	0x12, 0x4d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x30, 0x01, 0x12, 0x4b, 0x0a, 0x0b, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x30, 0x01, 0x12,
	0x41, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x70, 0x73, 0x61, 0x6c, 0x69, 0x73, 0x62,
	0x75, 0x72, 0x79, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_game_proto_rawDescOnce sync.Once
	file_game_proto_rawDescData = file_game_proto_rawDesc
)

func file_game_proto_rawDescGZIP() []byte {
	file_game_proto_rawDescOnce.Do(func() {
		file_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_proto_rawDescData)
	})
	return file_game_proto_rawDescData
}

var file_game_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_game_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_game_proto_goTypes = []interface{}{
	(GameState_Phase)(0),                    // 0: cards.proto.GameState.Phase
	(*RegisterRequest)(nil),                 // 1: cards.proto.RegisterRequest
	(*RegisterResponse)(nil),                // 2: cards.proto.RegisterResponse
	(*CreateGameRequest)(nil),               // 3: cards.proto.CreateGameRequest
	(*CreateGameResponse)(nil),              // 4: cards.proto.CreateGameResponse
	(*JoinGameRequest)(nil),                 // 5: cards.proto.JoinGameRequest
	(*ListGamesRequest)(nil),                // 6: cards.proto.ListGamesRequest
	(*ListGamesResponse)(nil),               // 7: cards.proto.ListGamesResponse
	(*ObserveGameRequest)(nil),              // 8: cards.proto.ObserveGameRequest
	(*GameActionRequest)(nil),               // 9: cards.proto.GameActionRequest
	(*ReadyToStartGameAction)(nil),          // 10: cards.proto.ReadyToStartGameAction
	(*LeaveGameAction)(nil),                 // 11: cards.proto.LeaveGameAction
	(*PlayCardAction)(nil),                  // 12: cards.proto.PlayCardAction
	(*GameStateRequest)(nil),                // 13: cards.proto.GameStateRequest
	(*GameState)(nil),                       // 14: cards.proto.GameState
	(*Status)(nil),                          // 15: cards.proto.Status
	(*GameActivity)(nil),                    // 16: cards.proto.GameActivity
	(*PingRequest)(nil),                     // 17: cards.proto.PingRequest
	(*PingResponse)(nil),                    // 18: cards.proto.PingResponse
	(*RegistryActivity)(nil),                // 19: cards.proto.RegistryActivity
	(*ListGamesResponse_GameSummary)(nil),   // 20: cards.proto.ListGamesResponse.GameSummary
	(*GameState_Player)(nil),                // 21: cards.proto.GameState.Player
	(*GameState_Cards)(nil),                 // 22: cards.proto.GameState.Cards
	(*GameActivity_PlayerJoined)(nil),       // 23: cards.proto.GameActivity.PlayerJoined
	(*GameActivity_PlayerLeft)(nil),         // 24: cards.proto.GameActivity.PlayerLeft
	(*GameActivity_GameReadyToStart)(nil),   // 25: cards.proto.GameActivity.GameReadyToStart
	(*GameActivity_GameStarted)(nil),        // 26: cards.proto.GameActivity.GameStarted
	(*GameActivity_CardPlayed)(nil),         // 27: cards.proto.GameActivity.CardPlayed
	(*GameActivity_TrickCompleted)(nil),     // 28: cards.proto.GameActivity.TrickCompleted
	(*GameActivity_YourTurn)(nil),           // 29: cards.proto.GameActivity.YourTurn
	(*GameActivity_GameFinished)(nil),       // 30: cards.proto.GameActivity.GameFinished
	(*GameActivity_GameAborted)(nil),        // 31: cards.proto.GameActivity.GameAborted
	(*RegistryActivity_SessionCreated)(nil), // 32: cards.proto.RegistryActivity.SessionCreated
	(*RegistryActivity_GameCreated)(nil),    // 33: cards.proto.RegistryActivity.GameCreated
	(*RegistryActivity_GameDeleted)(nil),    // 34: cards.proto.RegistryActivity.GameDeleted
	(*RegistryActivity_FullGamesList)(nil),  // 35: cards.proto.RegistryActivity.FullGamesList
}
var file_game_proto_depIdxs = []int32{
	0,  // 0: cards.proto.ListGamesRequest.phase:type_name -> cards.proto.GameState.Phase
	20, // 1: cards.proto.ListGamesResponse.games:type_name -> cards.proto.ListGamesResponse.GameSummary
	10, // 2: cards.proto.GameActionRequest.ready_to_start_game:type_name -> cards.proto.ReadyToStartGameAction
	11, // 3: cards.proto.GameActionRequest.leave_game:type_name -> cards.proto.LeaveGameAction
	12, // 4: cards.proto.GameActionRequest.play_card:type_name -> cards.proto.PlayCardAction
	0,  // 5: cards.proto.GameState.phase:type_name -> cards.proto.GameState.Phase
	21, // 6: cards.proto.GameState.players:type_name -> cards.proto.GameState.Player
	22, // 7: cards.proto.GameState.current_trick:type_name -> cards.proto.GameState.Cards
	22, // 8: cards.proto.GameState.legal_plays:type_name -> cards.proto.GameState.Cards
	23, // 9: cards.proto.GameActivity.player_joined:type_name -> cards.proto.GameActivity.PlayerJoined
	24, // 10: cards.proto.GameActivity.player_left:type_name -> cards.proto.GameActivity.PlayerLeft
	25, // 11: cards.proto.GameActivity.game_ready_to_start:type_name -> cards.proto.GameActivity.GameReadyToStart
	26, // 12: cards.proto.GameActivity.game_started:type_name -> cards.proto.GameActivity.GameStarted
	27, // 13: cards.proto.GameActivity.card_played:type_name -> cards.proto.GameActivity.CardPlayed
	28, // 14: cards.proto.GameActivity.trick_completed:type_name -> cards.proto.GameActivity.TrickCompleted
	29, // 15: cards.proto.GameActivity.your_turn:type_name -> cards.proto.GameActivity.YourTurn
	30, // 16: cards.proto.GameActivity.game_finished:type_name -> cards.proto.GameActivity.GameFinished
	31, // 17: cards.proto.GameActivity.game_aborted:type_name -> cards.proto.GameActivity.GameAborted
	32, // 18: cards.proto.RegistryActivity.session_created:type_name -> cards.proto.RegistryActivity.SessionCreated
	33, // 19: cards.proto.RegistryActivity.game_created:type_name -> cards.proto.RegistryActivity.GameCreated
	34, // 20: cards.proto.RegistryActivity.game_deleted:type_name -> cards.proto.RegistryActivity.GameDeleted
	35, // 21: cards.proto.RegistryActivity.full_games_list:type_name -> cards.proto.RegistryActivity.FullGamesList
	0,  // 22: cards.proto.ListGamesResponse.GameSummary.phase:type_name -> cards.proto.GameState.Phase
	22, // 23: cards.proto.GameState.Player.cards:type_name -> cards.proto.GameState.Cards
	22, // 24: cards.proto.GameState.Player.tricks:type_name -> cards.proto.GameState.Cards
	17, // 25: cards.proto.CardGameService.Ping:input_type -> cards.proto.PingRequest
	1,  // 26: cards.proto.CardGameService.Register:input_type -> cards.proto.RegisterRequest
	3,  // 27: cards.proto.CardGameService.CreateGame:input_type -> cards.proto.CreateGameRequest
	6,  // 28: cards.proto.CardGameService.ListGames:input_type -> cards.proto.ListGamesRequest
	5,  // 29: cards.proto.CardGameService.JoinGame:input_type -> cards.proto.JoinGameRequest
	8,  // 30: cards.proto.CardGameService.ObserveGame:input_type -> cards.proto.ObserveGameRequest
	9,  // 31: cards.proto.CardGameService.GameAction:input_type -> cards.proto.GameActionRequest
	13, // 32: cards.proto.CardGameService.GetGameState:input_type -> cards.proto.GameStateRequest
	18, // 33: cards.proto.CardGameService.Ping:output_type -> cards.proto.PingResponse
	19, // 34: cards.proto.CardGameService.Register:output_type -> cards.proto.RegistryActivity
	4,  // 35: cards.proto.CardGameService.CreateGame:output_type -> cards.proto.CreateGameResponse
	7,  // 36: cards.proto.CardGameService.ListGames:output_type -> cards.proto.ListGamesResponse
	16, // 37: cards.proto.CardGameService.JoinGame:output_type -> cards.proto.GameActivity
	16, // 38: cards.proto.CardGameService.ObserveGame:output_type -> cards.proto.GameActivity
	15, // 39: cards.proto.CardGameService.GameAction:output_type -> cards.proto.Status
	14, // 40: cards.proto.CardGameService.GetGameState:output_type -> cards.proto.GameState
	33, // [33:41] is the sub-list for method output_type
	25, // [25:33] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_game_proto_init() }
func file_game_proto_init() {
	if File_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObserveGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToStartGameAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveGameAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayCardAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGamesResponse_GameSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameState_Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameState_Cards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActivity_PlayerJoined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActivity_PlayerLeft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActivity_GameReadyToStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActivity_GameStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActivity_CardPlayed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActivity_TrickCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActivity_YourTurn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActivity_GameFinished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameActivity_GameAborted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryActivity_SessionCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryActivity_GameCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryActivity_GameDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryActivity_FullGamesList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_game_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*GameActionRequest_ReadyToStartGame)(nil),
		(*GameActionRequest_LeaveGame)(nil),
		(*GameActionRequest_PlayCard)(nil),
	}
	file_game_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*GameActivity_PlayerJoined_)(nil),
		(*GameActivity_PlayerLeft_)(nil),
		(*GameActivity_GameReadyToStart_)(nil),
		(*GameActivity_GameStarted_)(nil),
		(*GameActivity_CardPlayed_)(nil),
		(*GameActivity_TrickCompleted_)(nil),
		(*GameActivity_YourTurn_)(nil),
		(*GameActivity_GameFinished_)(nil),
		(*GameActivity_GameAborted_)(nil),
		(*GameActivity_BroadcastMsg)(nil),
	}
	file_game_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*RegistryActivity_SessionCreated_)(nil),
		(*RegistryActivity_GameCreated_)(nil),
		(*RegistryActivity_GameDeleted_)(nil),
		(*RegistryActivity_FullGamesList_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_game_proto_goTypes,
		DependencyIndexes: file_game_proto_depIdxs,
		EnumInfos:         file_game_proto_enumTypes,
		MessageInfos:      file_game_proto_msgTypes,
	}.Build()
	File_game_proto = out.File
	file_game_proto_rawDesc = nil
	file_game_proto_goTypes = nil
	file_game_proto_depIdxs = nil
}
